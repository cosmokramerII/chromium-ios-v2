name: Build iOS App

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build IPA
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Install certificates
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # Import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # Apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      
    - name: Build app
      working-directory: ChromiumApp
      run: |
        xcodebuild clean build \
          -project ChromiumApp.xcodeproj \
          -scheme ChromiumApp \
          -configuration Release \
          -sdk iphoneos \
          -destination "generic/platform=iOS" \
          CODE_SIGNING_ALLOWED=NO
      
    - name: Archive app
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      working-directory: ChromiumApp
      run: |
        xcodebuild archive \
          -project ChromiumApp.xcodeproj \
          -scheme ChromiumApp \
          -configuration Release \
          -archivePath build/ChromiumApp.xcarchive \
          -sdk iphoneos \
          -destination "generic/platform=iOS"
    
    - name: Export IPA
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      working-directory: ChromiumApp
      run: |
        xcodebuild -exportArchive \
          -archivePath build/ChromiumApp.xcarchive \
          -exportPath build \
          -exportOptionsPlist ExportOptions.plist
    
    - name: Upload IPA
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: ChromiumApp-IPA
        path: ChromiumApp/build/*.ipa
        
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ChromiumApp/build/*.ipa
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Clean up keychain
      if: always()
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db || true
